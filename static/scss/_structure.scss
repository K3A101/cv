@use 'helpers/mixins' as *;
@use 'helpers/variables' as *;

html {
    font-size: 62.5%; // Set default px to 10px, so 16px is 1.6rem
}

html,
body {
    font-family: var(--font);
    height: 100%;
    margin: 0;
    padding: 0;
    overflow-x: hidden;
}

body {
    height: auto; // Fixed sticky header#top
    min-height: 100%;
    overflow-x: hidden;
    background: var(--background-light);
    color: var(--text);
}

img {
    max-inline-size: 100%;


}
hr {
    margin: 2rem 0;
}

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    img[src$=".svg"] {
        height: auto;
        width: 100%;
    }
}

.visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    width: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;

    &.skip-link:focus {
        clip: auto;
        clip-path: none;
        height: auto;
        width: auto;
        left: 0.5rem;
        top: 0.5rem;
        color: var(--primary);
        border: 1px solid var(--primary);
        padding: 1rem;
    }
}

/**
 * Header
 */

header#top,
footer#bottom > *,
.content-grid {
    --padding-inline: 3rem;
    --content-max-width: 60rem;
    --breakout-max-size: 126rem;
    --breakout-size: calc((var(--breakout-max-size) - var(--content-max-width)) / 2);
    display: grid;
    grid-template-columns:
        [full-width-start] minmax(var(--padding-inline), 1fr)
            [breakout-start] minmax(0, var(--breakout-size))
                [content-start] min(100% - (var(--padding-inline) * 2), var(--content-max-width)) [content-end]
            minmax(0, var(--breakout-size)) [breakout-end]
        minmax(var(--padding-inline), 1fr) [full-width-end];

    @include respond-to(up-to-sm) {
        --padding-inline: 1.5rem;
    }

    @include respond-to(from-md) {
        --content-max-width: 70rem;
        --padding-inline: 3rem;
    }

    @include respond-to(from-lg) {
        --content-max-width: 110rem;
        --breakout-max-size: 168rem;
    }

    @include respond-to(from-xxl) {
        --content-max-width: 110rem;
    }

    &.two-third {
        --content-max-width: 108rem;
        --breakout-max-size: 128rem;
    }

    &.half {
        --content-max-width: 72rem;
        --breakout-max-size: 84rem;
    }

    > :not(.breakout, .full-width) {
        grid-column: content;
    }

    > .breakout {
        grid-column: breakout;
    }

    > .full-width {
        grid-column: full-width;
    }

    img.wrapper-background {
        grid-column: auto;
    }
}
/**
 * Main
 */

main {
    flex: 1 0 auto;
    min-height: 0.1rem; // This fixes the huge white space on IE11
}

.choices {
    background: var(--background);
    width: fit-content;
    padding: var(--padding-lg);
    border-radius: var(--radius-sm);
    box-shadow: var(--box-shadow);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);

    ul {
        display: flex;
        flex-direction: column;
        gap: var(--gap-sm);
        padding: 0;
    }

    &.hidden {
        display: none;
    }
}

.view {
    display: none;

    &.active {
        display: block;
    }
}


.cv {
    display: grid;
    grid-template-columns:1fr;

    @include respond-to(from-md) {
        grid-template-columns: 38.5rem 72.4rem ;

    }

    .col-1 {
        background: var(--primary);
        padding: 2rem;

        ul {
            padding: 0;
            li {
                [class*="fa"] {
                    margin-right: 0.5rem;
                }
            }
        }
    }

    .col-2 {
        background: var(--background);
        padding: var(--padding-sm);

        h1.name {
            span {
                display: block;
            }
        }

        .section-title {
            color: var(--text-light);
            background: var(--secondary);
            padding: 0.75rem 1rem;

        }

        .work-experience,
        .education{

            .experience-item {
                display: flex;
                gap: 1.5rem;
                margin-bottom: 1rem;
                font-size: 1.6rem;

                .experience-date {
                    width: 20rem;
                    flex-shrink: 0;
                    font-weight: 600;
                    color: var(--text);
                }

                .experience-info {

                }
            }
        }
        .skills-traits {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: var(--gap-md);

            .skills-column,
            .traits-column{
                ul.skills-list {
                    padding: 0;
                    columns: 2;

                    li {
                        display: flex;
                        flex-direction: row;
                        align-items: center;
                        gap: var(--gap-sm);

                        &::before {
                            content: "";
                            display: block;
                            width: 1rem;
                            height: 1rem;
                            background: var(--primary);
                            border-radius: 50%;
                        }
                    }
                }
            }
        }
    }
}

/**
 * Footer
 */

// footer#bottom {

// }
